<!DOCTYPE flight_plan SYSTEM "flight_plan.dtd">

<flight_plan alt="40" ground_alt="-4" lat0="51.979479" lon0="4.390229" max_dist_from_home="550" name="PackageDelivery" security_height="30">
  <header>
#include "subsystems/datalink/datalink.h"
#include "modules/Package_Delivery/Package_Delivery.h"
#include "modules/FastTrigger/FastTrigger.h"
#include "subsystems/navigation/bomb.h"
#include "subsystems/navigation/nav_line.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" x="0.6" y="17.4"/>
    <waypoint alt="30.0" name="AF" x="56.8" y="-3.8"/>
    <waypoint alt="0.0" name="TD" x="108.5" y="-22.9"/>
    <waypoint name="1" x="-71.8" y="65.9"/>
    <waypoint name="2" x="136.6" y="70.4"/>
    <waypoint name="_BASELEG" x="168.8" y="-13.8"/>
    <waypoint name="CLIMB" x="-114.5" y="162.3"/>
    <waypoint name="BASELEG" x="-68.8" y="-13.8"/>
    <waypoint  name="TARGET" x="25" y="0"/>
    <waypoint  name="START" x="10" y="150"/>
    <waypoint  name="END" x="10" y="140"/>
    <waypoint  name="RELEASE" x="010" y="130"/>
  </waypoints>
  <exceptions/>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="1" var="kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block group="home" key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png">
      <exception cond="estimator_z > ground_alt+40" deroute="Oval 1-2"/>
      <set value="0" var="kill_throttle"/>
      <set value="0" var="estimator_flight_time"/>
      <go from="HOME" pitch="15" throttle="1.0" vmode="throttle" wp="CLIMB"/>
      <deroute block="Oval 1-2"/>
    </block>

    <block group="base_pattern" name="Package Reset" strip_button="Package_Delivery_Reset" strip_icon="reset_icon.png">
    <!-- this block  is used to close the hatch and reset the parameters-->      
      <call fun="PackageReset()"/>
      <set value="BombCloseHatch()" var="unit"/>
      <deroute block="Store Release"/>
    </block>   
    
    <block group="base_pattern" name="Store Release" strip_button="Store Release" strip_icon="package.png">
<!-- This block is the main block for the store release program. -->
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <go approaching_time="6" wp="TARGET"/>
<!--       <set value="PACKAGEDEFALTITUDE" var="PackageDefAltitude"/> -->
      <circle alt="ground_alt+PackageDefAltitude" radius="nav_radius" until="NavCircleCount() > 1.5" wp="TARGET"/>
      <call fun="PackageData()"/>
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <call fun="nav_compute_baseleg(WP_START, WP_TARGET, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() > 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 20 > fabs(estimator_z - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
      <call fun="FastTrigger()"/>
      <go approaching_time="0" from="START" hmode="route" wp="END"/>
      <call fun="PackageReset()"/>
      <deroute block="Oval 1-2"/>
    </block>
 
    <block name="shoot">
      <set value="BombShoot()" var="unit"/>
      <deroute block="Standby"/>
    </block>
    <block name="close">
      <set value="BombCloseHatch()" var="unit"/>
      <deroute block="Standby"/>
    </block>
    
    <block key="F8" name="Figure 8 around wp 1" strip_button="Figure 8 (wp 1-2)" strip_icon="eight.png" group="extra_pattern">
      <eight center="1" radius="nav_radius" turn_around="2"/>
    </block>
    <block name="Oval 1-2" strip_button="Oval (wp 1-2)" strip_icon="oval.png" group="extra_pattern">
      <oval p1="1" p2="2" radius="nav_radius"/>
    </block>
    
    <block name="Line 1-2" strip_button="Line (wp 1-2)" strip_icon="line.png" group="extra_pattern">
      <call fun="nav_line_init()"/>
      <call fun="nav_line(WP_1, WP_2, nav_radius)"/>
    </block>
    <block group="home" key="<Control>a" name="Standby" strip_button="Standby" strip_icon="home.png">
      <circle radius="nav_radius" wp="STDBY"/>
    </block>
    <block group="land" name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() > 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 > fabs(estimator_z - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
    </block>
    <block name="final">
      <exception cond="ground_alt + 10 > estimator_z" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="flare">
      <go approaching_time="0" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
